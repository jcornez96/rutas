// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.jcornez.ruta.service.impl;

import es.jcornez.ruta.entidad.PuntoRuta;
import es.jcornez.ruta.entidad.Ruta;
import es.jcornez.ruta.repository.PuntoRutaRepository;
import es.jcornez.ruta.service.impl.PuntoRutaServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PuntoRutaServiceImpl_Roo_Service_Impl {
    
    declare @type: PuntoRutaServiceImpl: @Service;
    
    declare @type: PuntoRutaServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private PuntoRutaRepository PuntoRutaServiceImpl.puntoRutaRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param puntoRutaRepository
     */
    @Autowired
    public PuntoRutaServiceImpl.new(PuntoRutaRepository puntoRutaRepository) {
        setPuntoRutaRepository(puntoRutaRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return PuntoRutaRepository
     */
    public PuntoRutaRepository PuntoRutaServiceImpl.getPuntoRutaRepository() {
        return puntoRutaRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param puntoRutaRepository
     */
    public void PuntoRutaServiceImpl.setPuntoRutaRepository(PuntoRutaRepository puntoRutaRepository) {
        this.puntoRutaRepository = puntoRutaRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param puntoRuta
     */
    @Transactional
    public void PuntoRutaServiceImpl.delete(PuntoRuta puntoRuta) {
        // Clear bidirectional many-to-one child relationship with Ruta
        if (puntoRuta.getRuta() != null) {
            puntoRuta.getRuta().getPuntosRuta().remove(puntoRuta);
        }
        
        getPuntoRutaRepository().delete(puntoRuta);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<PuntoRuta> PuntoRutaServiceImpl.save(Iterable<PuntoRuta> entities) {
        return getPuntoRutaRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void PuntoRutaServiceImpl.delete(Iterable<Long> ids) {
        List<PuntoRuta> toDelete = getPuntoRutaRepository().findAll(ids);
        getPuntoRutaRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return PuntoRuta
     */
    @Transactional
    public PuntoRuta PuntoRutaServiceImpl.save(PuntoRuta entity) {
        return getPuntoRutaRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return PuntoRuta
     */
    public PuntoRuta PuntoRutaServiceImpl.findOne(Long id) {
        return getPuntoRutaRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return PuntoRuta
     */
    public PuntoRuta PuntoRutaServiceImpl.findOneForUpdate(Long id) {
        return getPuntoRutaRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<PuntoRuta> PuntoRutaServiceImpl.findAll(Iterable<Long> ids) {
        return getPuntoRutaRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<PuntoRuta> PuntoRutaServiceImpl.findAll() {
        return getPuntoRutaRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long PuntoRutaServiceImpl.count() {
        return getPuntoRutaRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<PuntoRuta> PuntoRutaServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getPuntoRutaRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<PuntoRuta> PuntoRutaServiceImpl.findByRuta(Ruta ruta, GlobalSearch globalSearch, Pageable pageable) {
        return getPuntoRutaRepository().findByRuta(ruta, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @return Long
     */
    public long PuntoRutaServiceImpl.countByRuta(Ruta ruta) {
        return getPuntoRutaRepository().countByRuta(ruta);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<PuntoRuta> PuntoRutaServiceImpl.getEntityType() {
        return PuntoRuta.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> PuntoRutaServiceImpl.getIdType() {
        return Long.class;
    }
    
}
