// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.jcornez.ruta.service.api;

import es.jcornez.ruta.entidad.Ciudad;
import es.jcornez.ruta.entidad.Ruta;
import es.jcornez.ruta.entidad.TipoRuta;
import es.jcornez.ruta.entidad.Usuario;
import es.jcornez.ruta.model.entity.FilterConfigBean;
import es.jcornez.ruta.service.api.RutaService;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.format.EntityResolver;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

privileged aspect RutaService_Roo_Service {
    
    declare parents: RutaService extends EntityResolver<Ruta, Long>;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Ruta
     */
    public abstract Ruta RutaService.findOne(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     */
    public abstract void RutaService.delete(Ruta ruta);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    public abstract List<Ruta> RutaService.save(Iterable<Ruta> entities);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    public abstract void RutaService.delete(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Ruta
     */
    public abstract Ruta RutaService.save(Ruta entity);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Ruta
     */
    public abstract Ruta RutaService.findOneForUpdate(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public abstract List<Ruta> RutaService.findAll(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public abstract List<Ruta> RutaService.findAll();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public abstract long RutaService.count();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<Ruta> RutaService.findAll(GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @param puntosRutaToAdd
     * @return Ruta
     */
    public abstract Ruta RutaService.addToPuntosRuta(Ruta ruta, Iterable<Long> puntosRutaToAdd);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @param puntosRutaToRemove
     * @return Ruta
     */
    public abstract Ruta RutaService.removeFromPuntosRuta(Ruta ruta, Iterable<Long> puntosRutaToRemove);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @param puntosRuta
     * @return Ruta
     */
    public abstract Ruta RutaService.setPuntosRuta(Ruta ruta, Iterable<Long> puntosRuta);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @param rutasSeguidasToAdd
     * @return Ruta
     */
    public abstract Ruta RutaService.addToRutasSeguidas(Ruta ruta, Iterable<Long> rutasSeguidasToAdd);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @param rutasSeguidasToRemove
     * @return Ruta
     */
    public abstract Ruta RutaService.removeFromRutasSeguidas(Ruta ruta, Iterable<Long> rutasSeguidasToRemove);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @param rutasSeguidas
     * @return Ruta
     */
    public abstract Ruta RutaService.setRutasSeguidas(Ruta ruta, Iterable<Long> rutasSeguidas);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ciudad
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<Ruta> RutaService.findByCiudad(Ciudad ciudad, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tipoRuta
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<Ruta> RutaService.findByTipoRuta(TipoRuta tipoRuta, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param usuario
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<Ruta> RutaService.findByUsuario(Usuario usuario, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ciudad
     * @return Long
     */
    public abstract long RutaService.countByCiudad(Ciudad ciudad);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tipoRuta
     * @return Long
     */
    public abstract long RutaService.countByTipoRuta(TipoRuta tipoRuta);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param usuario
     * @return Long
     */
    public abstract long RutaService.countByUsuario(Usuario usuario);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param formBean
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<Ruta> RutaService.queryById(FilterConfigBean formBean, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param formBean
     * @return Long
     */
    public abstract long RutaService.countById(FilterConfigBean formBean);
    
}
