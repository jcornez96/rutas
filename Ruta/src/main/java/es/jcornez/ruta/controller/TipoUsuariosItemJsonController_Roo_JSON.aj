// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.jcornez.ruta.controller;

import es.jcornez.ruta.controller.TipoUsuariosItemJsonController;
import es.jcornez.ruta.entidad.TipoUsuario;
import es.jcornez.ruta.service.api.TipoUsuarioService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect TipoUsuariosItemJsonController_Roo_JSON {
    
    declare @type: TipoUsuariosItemJsonController: @RestController;
    
    declare @type: TipoUsuariosItemJsonController: @RequestMapping(value = "/rest/tipousuarios/{tipoUsuario}", name = "TipoUsuariosItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param tipoUsuarioService
     */
    @Autowired
    public TipoUsuariosItemJsonController.new(TipoUsuarioService tipoUsuarioService) {
        this.tipoUsuarioService = tipoUsuarioService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return TipoUsuario
     */
    @ModelAttribute
    public TipoUsuario TipoUsuariosItemJsonController.getTipoUsuario(@PathVariable("tipoUsuario") Long id) {
        TipoUsuario tipoUsuario = tipoUsuarioService.findOne(id);
        if (tipoUsuario == null) {
            throw new NotFoundException(String.format("TipoUsuario with identifier '%s' not found",id));
        }
        return tipoUsuario;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tipoUsuario
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> TipoUsuariosItemJsonController.show(@ModelAttribute TipoUsuario tipoUsuario) {
        return ResponseEntity.ok(tipoUsuario);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tipoUsuario
     * @return UriComponents
     */
    public static UriComponents TipoUsuariosItemJsonController.showURI(TipoUsuario tipoUsuario) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(TipoUsuariosItemJsonController.class).show(tipoUsuario))
            .buildAndExpand(tipoUsuario.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedTipoUsuario
     * @param tipoUsuario
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> TipoUsuariosItemJsonController.update(@ModelAttribute TipoUsuario storedTipoUsuario, @Valid @RequestBody TipoUsuario tipoUsuario, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        tipoUsuario.setId(storedTipoUsuario.getId());
        getTipoUsuarioService().save(tipoUsuario);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tipoUsuario
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> TipoUsuariosItemJsonController.delete(@ModelAttribute TipoUsuario tipoUsuario) {
        getTipoUsuarioService().delete(tipoUsuario);
        return ResponseEntity.ok().build();
    }
    
}
