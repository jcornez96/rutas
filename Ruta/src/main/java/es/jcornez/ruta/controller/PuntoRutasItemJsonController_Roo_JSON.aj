// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.jcornez.ruta.controller;

import es.jcornez.ruta.controller.PuntoRutasItemJsonController;
import es.jcornez.ruta.entidad.PuntoRuta;
import es.jcornez.ruta.service.api.PuntoRutaService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect PuntoRutasItemJsonController_Roo_JSON {
    
    declare @type: PuntoRutasItemJsonController: @RestController;
    
    declare @type: PuntoRutasItemJsonController: @RequestMapping(value = "/rest/puntorutas/{puntoRuta}", name = "PuntoRutasItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param puntoRutaService
     */
    @Autowired
    public PuntoRutasItemJsonController.new(PuntoRutaService puntoRutaService) {
        this.puntoRutaService = puntoRutaService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return PuntoRuta
     */
    @ModelAttribute
    public PuntoRuta PuntoRutasItemJsonController.getPuntoRuta(@PathVariable("puntoRuta") Long id) {
        PuntoRuta puntoRuta = puntoRutaService.findOne(id);
        if (puntoRuta == null) {
            throw new NotFoundException(String.format("PuntoRuta with identifier '%s' not found",id));
        }
        return puntoRuta;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param puntoRuta
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> PuntoRutasItemJsonController.show(@ModelAttribute PuntoRuta puntoRuta) {
        return ResponseEntity.ok(puntoRuta);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param puntoRuta
     * @return UriComponents
     */
    public static UriComponents PuntoRutasItemJsonController.showURI(PuntoRuta puntoRuta) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(PuntoRutasItemJsonController.class).show(puntoRuta))
            .buildAndExpand(puntoRuta.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedPuntoRuta
     * @param puntoRuta
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> PuntoRutasItemJsonController.update(@ModelAttribute PuntoRuta storedPuntoRuta, @Valid @RequestBody PuntoRuta puntoRuta, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        puntoRuta.setId(storedPuntoRuta.getId());
        getPuntoRutaService().save(puntoRuta);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param puntoRuta
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> PuntoRutasItemJsonController.delete(@ModelAttribute PuntoRuta puntoRuta) {
        getPuntoRutaService().delete(puntoRuta);
        return ResponseEntity.ok().build();
    }
    
}
