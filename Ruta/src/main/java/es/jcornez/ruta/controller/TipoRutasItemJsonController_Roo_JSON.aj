// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.jcornez.ruta.controller;

import es.jcornez.ruta.controller.TipoRutasItemJsonController;
import es.jcornez.ruta.entidad.TipoRuta;
import es.jcornez.ruta.service.api.TipoRutaService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect TipoRutasItemJsonController_Roo_JSON {
    
    declare @type: TipoRutasItemJsonController: @RestController;
    
    declare @type: TipoRutasItemJsonController: @RequestMapping(value = "/rest/tiporutas/{tipoRuta}", name = "TipoRutasItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param tipoRutaService
     */
    @Autowired
    public TipoRutasItemJsonController.new(TipoRutaService tipoRutaService) {
        this.tipoRutaService = tipoRutaService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return TipoRuta
     */
    @ModelAttribute
    public TipoRuta TipoRutasItemJsonController.getTipoRuta(@PathVariable("tipoRuta") Long id) {
        TipoRuta tipoRuta = tipoRutaService.findOne(id);
        if (tipoRuta == null) {
            throw new NotFoundException(String.format("TipoRuta with identifier '%s' not found",id));
        }
        return tipoRuta;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tipoRuta
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> TipoRutasItemJsonController.show(@ModelAttribute TipoRuta tipoRuta) {
        return ResponseEntity.ok(tipoRuta);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tipoRuta
     * @return UriComponents
     */
    public static UriComponents TipoRutasItemJsonController.showURI(TipoRuta tipoRuta) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(TipoRutasItemJsonController.class).show(tipoRuta))
            .buildAndExpand(tipoRuta.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedTipoRuta
     * @param tipoRuta
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> TipoRutasItemJsonController.update(@ModelAttribute TipoRuta storedTipoRuta, @Valid @RequestBody TipoRuta tipoRuta, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        tipoRuta.setId(storedTipoRuta.getId());
        getTipoRutaService().save(tipoRuta);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tipoRuta
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> TipoRutasItemJsonController.delete(@ModelAttribute TipoRuta tipoRuta) {
        getTipoRutaService().delete(tipoRuta);
        return ResponseEntity.ok().build();
    }
    
}
