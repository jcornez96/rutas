// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.jcornez.ruta.controller;

import es.jcornez.ruta.controller.RutasItemJsonController;
import es.jcornez.ruta.entidad.Ruta;
import es.jcornez.ruta.service.api.RutaService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect RutasItemJsonController_Roo_JSON {
    
    declare @type: RutasItemJsonController: @RestController;
    
    declare @type: RutasItemJsonController: @RequestMapping(value = "/rest/rutas/{ruta}", name = "RutasItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param rutaService
     */
    @Autowired
    public RutasItemJsonController.new(RutaService rutaService) {
        this.rutaService = rutaService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Ruta
     */
    @ModelAttribute
    public Ruta RutasItemJsonController.getRuta(@PathVariable("ruta") Long id) {
        Ruta ruta = rutaService.findOne(id);
        if (ruta == null) {
            throw new NotFoundException(String.format("Ruta with identifier '%s' not found",id));
        }
        return ruta;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> RutasItemJsonController.show(@ModelAttribute Ruta ruta) {
        return ResponseEntity.ok(ruta);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @return UriComponents
     */
    public static UriComponents RutasItemJsonController.showURI(Ruta ruta) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(RutasItemJsonController.class).show(ruta))
            .buildAndExpand(ruta.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedRuta
     * @param ruta
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> RutasItemJsonController.update(@ModelAttribute Ruta storedRuta, @Valid @RequestBody Ruta ruta, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        ruta.setId(storedRuta.getId());
        getRutaService().save(ruta);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ruta
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> RutasItemJsonController.delete(@ModelAttribute Ruta ruta) {
        getRutaService().delete(ruta);
        return ResponseEntity.ok().build();
    }
    
}
